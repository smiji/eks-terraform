name: Terraform EKS Cluster Provisioning

on:
  push:
    branches:
      - main  # Only trigger on pushes to main

jobs:
  terraform:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Install Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.3.2  # Use your required Terraform version

      # # Step 4: Terraform Init
      # - name: Terraform Init
      #   working-directory: ./terraform
      #   run: |
      #     terraform version
      #     terraform init

      # # Step 5: Terraform Apply (approve plan automatically)
      # - name: Terraform Apply
      #   working-directory: ./terraform
      #   env:
      #     TF_VAR_region: ${{ secrets.AWS_REGION }}
      #   run: terraform apply -auto-approve

      #Step 6: Update kubeconfig
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name java-webapp --region eu-west-2
      # Step 7: Deploy to EKS
      - name: Deploy to EKS
        run: |
          kubectl apply -f k8/deployment.yaml
          kubectl apply -f k8/service.yaml

        # Step 8: Terraform Destroy (approve plan automatically)
      # - name: Terraform Destroy
      #   working-directory: ./terraform
      #   env:
      #     TF_VAR_region: ${{ secrets.AWS_REGION }}
      #   run: terraform destroy -auto-approve

